---
http_interactions:
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"params":"facetFilters=%5B%22category%3Astandard%22%5D&query=ISO+123"}'
    headers:
      User-Agent:
      - Algolia for Ruby (1.23.2); Ruby (2.4.0)
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip,deflate
      Date:
      - Sun, 21 Oct 2018 19:51:28 GMT
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 21 Oct 2018 19:51:28 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - inline; filename=a.txt
      Content-Encoding:
      - gzip
    body:
      encoding: UTF-8
      string: '{"hits":[{"category":"standard","path":"/sites/isoorg/contents/data/standard/02/32/23281","uuid":"04723ea9-847a-4b2b-a32b-0d8f7d76903b","title":"ISO
        123:2001 Rubber latex -- Sampling","status":"Published","year":2016,"order":11,"objectID":"23281_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>:2001 Rubber latex -- Sampling","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/00/39/3926","uuid":"315a9a02-edd8-4919-9fc1-2dbaea82b24d","title":"ISO
        123:1985 Rubber latex -- Sampling","status":"Withdrawn","year":2001,"order":100,"objectID":"3926_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>:1985 Rubber latex -- Sampling","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/00/39/3925","uuid":"738cf8f2-6181-4dcd-a079-db69ee051821","title":"ISO
        123:1974 Rubber latex -- Sampling","status":"Withdrawn","year":1985,"order":100,"objectID":"3925_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>:1974 Rubber latex -- Sampling","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/00/58/5854","uuid":"58691098-05e3-45db-9520-6a6eaba11b23","title":"ISO
        1237:1981 Mustard seed -- Specification","status":"Published","year":2018,"order":11,"text":"Establishes
        the requirements for this product. Describes sampling, methods of test, packing
        and marking. Annex A covers the determination of loss in mass at 103 degrees
        centigrade, Annex B the determination of allyl isothiocyanate, Annex C the
        determination of p-hydroxybenzyl isothiocyanate by means of the colorimetric
        method, Annex D the determination of p-hydroxybenzyl isothiocyanate by means
        of the argentimetric method and Annex E includes recommendations concerning
        storage and transport conditions. ","objectID":"5854_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>7:1981 Mustard seed -- Specification","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"Establishes
        the requirements for this product. Describes sampling, methods of test, packing
        and marking. Annex A covers the determination of loss in mass at 103 degrees
        centigrade, Annex B the determination of allyl isothiocyanate, Annex C the
        determination of p-hydroxybenzyl isothiocyanate by means of the colorimetric
        method, Annex D the determination of p-hydroxybenzyl isothiocyanate by means
        of the argentimetric method and Annex E includes recommendations concerning
        storage and transport conditions. ","matchLevel":"none","matchedWords":[]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/05/29/52966","uuid":"47a1692a-552f-49fa-88b8-d930bdf40b17","title":"ISO
        12345:2013 Diesel engines -- Cleanliness assessment of fuel injection equipment","status":"Published","year":2018,"order":11,"text":"ISO
        12345:2013 specifies cleanliness assessment procedures for evaluating the
        amount of debris found within the clean side of diesel fuel injection assemblies,
        which could lead to a reduction in the system''s operational effectiveness.
        While other International Standards, e.g. the ISO 16232 series, relate to
        cleanliness of components used in road vehicle fluid circuits, ISO 12345:2013
        is focused on diesel fuel injection assemblies as supplied to diesel engine
        manufacturers or the service market. ","objectID":"52966_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>45:2013 Diesel engines -- Cleanliness assessment of fuel injection
        equipment","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>45:2013 specifies cleanliness assessment procedures for evaluating
        the amount of debris found within the clean side of diesel fuel injection
        assemblies, which could lead to a reduction in the system''s operational effectiveness.
        While other International Standards, e.g. the <em>ISO</em> 16232 series, relate
        to cleanliness of components used in road vehicle fluid circuits, <em>ISO</em>
        <em>123</em>45:2013 is focused on diesel fuel injection assemblies as supplied
        to diesel engine manufacturers or the service market. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/05/13/51389","uuid":"e5b1e088-6b1b-4eb8-ab46-1fdbb56a724f","title":"ISO
        12315:2010 Aluminium oxide primarily used for production of aluminium -- Method
        for calculating the Al2O3 content of smelter-grade alumina","status":"Published","year":2018,"order":11,"text":"ISO
        12315:2010 describes methods for calculating and reporting the Al2O3 content
        of smelter-grade alumina, on either a dry or ignited basis, from the results
        of the determinations in accordance with ISO 806 and AS 2879.7. ","objectID":"51389_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>15:2010 Aluminium oxide primarily used for production of aluminium
        -- Method for calculating the Al2O3 content of smelter-grade alumina","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>15:2010 describes methods for calculating and reporting the Al2O3
        content of smelter-grade alumina, on either a dry or ignited basis, from the
        results of the determinations in accordance with <em>ISO</em> 806 and AS 2879.7.
        ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/05/13/51351","uuid":"d75b38e8-3b12-4285-b559-808d5a664485","title":"ISO
        12312-1:2013 Eye and face protection -- Sunglasses and related eyewear --
        Part 1: Sunglasses for general use","status":"Published","year":2018,"order":11,"text":"ISO
        12312-1:2012 is applicable to all afocal (plano power) sunglasses and clip-ons
        for general use, including road use and driving, intended for protection against
        solar radiation. ","objectID":"51351_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>12-1:2013 Eye and face protection -- Sunglasses and related eyewear
        -- Part 1: Sunglasses for general use","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>12-1:2012 is applicable to all afocal (plano power) sunglasses
        and clip-ons for general use, including road use and driving, intended for
        protection against solar radiation. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/05/13/51350","uuid":"f147180b-c24f-46c1-9615-1e920d3af0db","title":"ISO
        12311:2013 Personal protective equipment -- Test methods for sunglasses and
        related eyewear","status":"Published","year":2018,"order":11,"text":"ISO 12311:2012
        specifies reference test methods for determining the properties of sunglasses
        given in ISO 12312 (all parts). It is applicable to all sunglasses and related
        eyewear. Other test methods may be used if shown to be equivalent. ","objectID":"51350_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>11:2013 Personal protective equipment -- Test methods for sunglasses
        and related eyewear","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>11:2012 specifies reference test methods for determining the properties
        of sunglasses given in <em>ISO</em> <em>123</em>12 (all parts). It is applicable
        to all sunglasses and related eyewear. Other test methods may be used if shown
        to be equivalent. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/03/65/36511","uuid":"59319e00-dc55-4b26-b5fc-9753a13219e9","title":"ISO
        12301:2007 Plain bearings -- Quality control techniques and inspection of
        geometrical and material quality characteristics","status":"Published","year":2018,"order":11,"text":"ISO
        12301:2007 specifies quality control techniques and inspection of the geometrical
        and material quality characteristics of the following types of plain bearings:
        thin-walled half-bearings with or without flange, as specified in ISO 3548;
        metallic thick-walled half-bearings (with and without flange) that are manufactured
        as halves but that are necessarily interchangeable and have the ratio s 3
        : D o > 0,11; wrapped bushes, as specified in ISO 3547; unsplit metallic bushes
        (with and without flange) made from solid and multilayer materials and with
        outside diameters up to 230 mm; solid polymer bushes (with and without flange)
        with inside diameters up to 200 mm; ring-type thrust washers and pressed bimetallic
        half-thrust washers, as specified in ISO 6525 and ISO 6526, respectively;
        and bushes made from sintered material, as specified in ISO 2795. ","objectID":"36511_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>01:2007 Plain bearings -- Quality control techniques and inspection
        of geometrical and material quality characteristics","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>01:2007 specifies quality control techniques and inspection of
        the geometrical and material quality characteristics of the following types
        of plain bearings: thin-walled half-bearings with or without flange, as specified
        in <em>ISO</em> 3548; metallic thick-walled half-bearings (with and without
        flange) that are manufactured as halves but that are necessarily interchangeable
        and have the ratio s 3 : D o > 0,11; wrapped bushes, as specified in <em>ISO</em>
        3547; unsplit metallic bushes (with and without flange) made from solid and
        multilayer materials and with outside diameters up to 230 mm; solid polymer
        bushes (with and without flange) with inside diameters up to 200 mm; ring-type
        thrust washers and pressed bimetallic half-thrust washers, as specified in
        <em>ISO</em> 6525 and <em>ISO</em> 6526, respectively; and bushes made from
        sintered material, as specified in <em>ISO</em> 2795. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/02/00/20000","uuid":"5ad65cfd-d409-472e-aa48-b908cad0fe87","title":"ISO
        1234:1997 Split pins","status":"Published","year":2018,"order":11,"objectID":"20000_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>4:1997 Split pins","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/07/02/70248","uuid":"0ac30206-4c37-481a-8467-b9928f134098","title":"ISO
        12354-4:2017 Building acoustics -- Estimation of acoustic performance of buildings
        from the performance of elements -- Part 4: Transmission of indoor sound to
        the outside","status":"Published","year":2017,"order":11,"text":"ISO 12354-4:2017
        specifies a calculation model to estimate the sound power level radiated by
        the envelope of a building due to airborne sound inside that building, primarily
        by means of measured sound pressure levels inside the building and measured
        data which characterize the sound transmission by the relevant elements and
        openings in the building envelope. These sound power levels, together with
        those of other sound sources in or in front of the building envelope, form
        the basis for the calculation of the sound pressure level at a chosen distance
        from a building as a measure for the acoustic performance of buildings. The
        prediction of the inside sound pressure level from knowledge of the indoor
        sound sources is outside the scope of this document. The prediction of the
        outdoor sound propagation is outside the scope of this document. NOTE          For
        simple propagation conditions an approach is given for the estimation of the
        sound pressure level in Annex E. ISO 12354-4:2017 describes the principles
        of the calculation model, lists the relevant quantities and defines its applications
        and restrictions. ","objectID":"70248_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>54-4:2017 Building acoustics -- Estimation of acoustic performance
        of buildings from the performance of elements -- Part 4: Transmission of indoor
        sound to the outside","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>54-4:2017 specifies a calculation model to estimate the sound
        power level radiated by the envelope of a building due to airborne sound inside
        that building, primarily by means of measured sound pressure levels inside
        the building and measured data which characterize the sound transmission by
        the relevant elements and openings in the building envelope. These sound power
        levels, together with those of other sound sources in or in front of the building
        envelope, form the basis for the calculation of the sound pressure level at
        a chosen distance from a building as a measure for the acoustic performance
        of buildings. The prediction of the inside sound pressure level from knowledge
        of the indoor sound sources is outside the scope of this document. The prediction
        of the outdoor sound propagation is outside the scope of this document. NOTE          For
        simple propagation conditions an approach is given for the estimation of the
        sound pressure level in Annex E. <em>ISO</em> <em>123</em>54-4:2017 describes
        the principles of the calculation model, lists the relevant quantities and
        defines its applications and restrictions. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/07/02/70244","uuid":"8ed03afb-aeb7-4003-800b-fca5428d9129","title":"ISO
        12354-3:2017 Building acoustics -- Estimation of acoustic performance of buildings
        from the performance of elements -- Part 3: Airborne sound insulation against
        outdoor sound","status":"Published","year":2017,"order":11,"text":"ISO 12354-3:2017
        specifies a calculation model to estimate the sound insulation or the sound
        pressure level difference of a façade or other external surface of a building.
        The calculation is based on the sound reduction index of the different elements
        from which the façade is constructed and it includes direct and flanking transmission.
        The calculation gives results which correspond approximately to the results
        from field measurements in accordance with ISO 16283‑3. Calculations can be
        carried out for frequency bands or for single number ratings. The calculation
        results can also be used for calculating the indoor sound pressure level due
        to for instance road traffic (see Annex E). ISO 12354-3:2017 describes the
        principles of the calculation model, lists the relevant quantities and defines
        its applications and restrictions. ","objectID":"70244_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>54-3:2017 Building acoustics -- Estimation of acoustic performance
        of buildings from the performance of elements -- Part 3: Airborne sound insulation
        against outdoor sound","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>54-3:2017 specifies a calculation model to estimate the sound
        insulation or the sound pressure level difference of a façade or other external
        surface of a building. The calculation is based on the sound reduction index
        of the different elements from which the façade is constructed and it includes
        direct and flanking transmission. The calculation gives results which correspond
        approximately to the results from field measurements in accordance with <em>ISO</em>
        16283‑3. Calculations can be carried out for frequency bands or for single
        number ratings. The calculation results can also be used for calculating the
        indoor sound pressure level due to for instance road traffic (see Annex E).
        <em>ISO</em> <em>123</em>54-3:2017 describes the principles of the calculation
        model, lists the relevant quantities and defines its applications and restrictions.
        ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/07/02/70243","uuid":"a1882379-fd3f-4936-bd5f-832a6a2818cb","title":"ISO
        12354-2:2017 Building acoustics -- Estimation of acoustic performance of buildings
        from the performance of elements -- Part 2: Impact sound insulation between
        rooms","status":"Published","year":2017,"order":11,"text":"ISO 12354-2:2017
        specifies calculation models designed to estimate the impact sound insulation
        between rooms in buildings, primarily using measured data which characterize
        direct or indirect flanking transmission by the participating building elements
        and theoretically-derived methods of sound propagation in structural elements.
        A detailed model is described for calculation in frequency bands, in the frequency
        range 1/3 octave 100 Hz to 3150 Hz in accordance with ISO 717‑1, possibly
        extended down to 1/3 octave 50 Hz if element data and junction data are available
        (see Annex E); the single number rating of buildings can be determined from
        the calculation results. A simplified model with a restricted field of application
        is deduced from this, calculating directly the single number rating, using
        the single number ratings of the elements; the uncertainty on the apparent
        impact sound pressure level calculated using the simplified model can be determined
        according to the method described in ISO 12354‑1:2017, Annex K (see Clause
        5). ISO 12354-2:2017 describes the principles of the calculation scheme, lists
        the relevant quantities and defines its applications and restrictions. ","objectID":"70243_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>54-2:2017 Building acoustics -- Estimation of acoustic performance
        of buildings from the performance of elements -- Part 2: Impact sound insulation
        between rooms","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>54-2:2017 specifies calculation models designed to estimate the
        impact sound insulation between rooms in buildings, primarily using measured
        data which characterize direct or indirect flanking transmission by the participating
        building elements and theoretically-derived methods of sound propagation in
        structural elements. A detailed model is described for calculation in frequency
        bands, in the frequency range 1/3 octave 100 Hz to 3150 Hz in accordance with
        <em>ISO</em> 717‑1, possibly extended down to 1/3 octave 50 Hz if element
        data and junction data are available (see Annex E); the single number rating
        of buildings can be determined from the calculation results. A simplified
        model with a restricted field of application is deduced from this, calculating
        directly the single number rating, using the single number ratings of the
        elements; the uncertainty on the apparent impact sound pressure level calculated
        using the simplified model can be determined according to the method described
        in <em>ISO</em> <em>123</em>54‑1:2017, Annex K (see Clause 5). <em>ISO</em>
        <em>123</em>54-2:2017 describes the principles of the calculation scheme,
        lists the relevant quantities and defines its applications and restrictions.
        ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/07/02/70242","uuid":"675039ce-342b-471c-94eb-bb8d6ee6e156","title":"ISO
        12354-1:2017 Building acoustics -- Estimation of acoustic performance of buildings
        from the performance of elements -- Part 1: Airborne sound insulation between
        rooms","status":"Published","year":2017,"order":11,"text":"ISO 12354-1:2017
        specifies calculation models designed to estimate the airborne sound insulation
        between adjacent rooms in buildings, primarily using measured data which characterize
        direct or indirect flanking transmission by the participating building elements,
        and theoretically-derived methods of sound propagation in structural elements.
        A detailed model is described for calculation in frequency bands, in the frequency
        range 1/3 octave 100 Hz to 3 150 Hz in accordance with ISO 717‑1, possibly
        extended down to 1/3 octave 50 Hz if element data and junction data are available
        (see Annex I); the single number rating can be determined from the calculation
        results. A simplified model with a restricted field of application is deduced
        from this, calculating directly the single number rating, using the single
        number ratings of the elements; a method to determine uncertainty is proposed
        for the simplified model (see Annex K). ISO 12354-1:2017 describes the principles
        of the calculation scheme, lists the relevant quantities and defines its applications
        and restrictions. ","objectID":"70242_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>54-1:2017 Building acoustics -- Estimation of acoustic performance
        of buildings from the performance of elements -- Part 1: Airborne sound insulation
        between rooms","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>54-1:2017 specifies calculation models designed to estimate the
        airborne sound insulation between adjacent rooms in buildings, primarily using
        measured data which characterize direct or indirect flanking transmission
        by the participating building elements, and theoretically-derived methods
        of sound propagation in structural elements. A detailed model is described
        for calculation in frequency bands, in the frequency range 1/3 octave 100
        Hz to 3 150 Hz in accordance with <em>ISO</em> 717‑1, possibly extended down
        to 1/3 octave 50 Hz if element data and junction data are available (see Annex
        I); the single number rating can be determined from the calculation results.
        A simplified model with a restricted field of application is deduced from
        this, calculating directly the single number rating, using the single number
        ratings of the elements; a method to determine uncertainty is proposed for
        the simplified model (see Annex K). <em>ISO</em> <em>123</em>54-1:2017 describes
        the principles of the calculation scheme, lists the relevant quantities and
        defines its applications and restrictions. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/06/86/68625","uuid":"3a1b8b5d-2818-4e6c-a4cf-ab8930732c9c","title":"ISO
        12308:2017 Plain bearings -- Quality assurance of sample types -- Definitions,
        applications and testing","status":"Published","year":2017,"order":11,"text":"ISO
        12308:2017 defines the types of plain bearing samples exchanged between purchaser
        and manufacturer. In the field of internal combustion engines and other series
        production, it is necessary to work with different types of samples depending
        on the purpose. Types of samples are as follows. -      Samples used for tests
        and examinations which are carried out in the experimental stage and pilot
        lot stage. These include fitting samples, prototype samples and intermediate
        samples. -      Samples used to prove that the quality is in accordance with
        the quality requirements (dimensions, material and performance specification).
        These include initial samples and reference samples and, if necessary, intermediate
        samples. NOTE       See ISO 3534 (all parts) and ISO 9000 for further information.
        -      Samples which give selective information about particular quality characteristics
        of a plain bearing, relating to their conformity with the specifications.
        These involve reference and characteristic modification samples. ","objectID":"68625_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>08:2017 Plain bearings -- Quality assurance of sample types --
        Definitions, applications and testing","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>08:2017 defines the types of plain bearing samples exchanged between
        purchaser and manufacturer. In the field of internal combustion engines and
        other series production, it is necessary to work with different types of samples
        depending on the purpose. Types of samples are as follows. -      Samples
        used for tests and examinations which are carried out in the experimental
        stage and pilot lot stage. These include fitting samples, prototype samples
        and intermediate samples. -      Samples used to prove that the quality is
        in accordance with the quality requirements (dimensions, material and performance
        specification). These include initial samples and reference samples and, if
        necessary, intermediate samples. NOTE       See <em>ISO</em> 3534 (all parts)
        and <em>ISO</em> 9000 for further information. -      Samples which give selective
        information about particular quality characteristics of a plain bearing, relating
        to their conformity with the specifications. These involve reference and characteristic
        modification samples. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/06/86/68624","uuid":"689cd1fc-1084-49e7-80ed-82aa80e95aae","title":"ISO
        12302:2017 Plain bearings -- Quality characteristics -- Statistical process
        control (SPC)","status":"Published","year":2017,"order":11,"text":"ISO 12302:2017
        specifies for plain bearings (except thick-walled half-bearings) those quality
        characteristics in accordance with ISO 12301 which can be used to regulate
        and control a production process on the basis of statistical process control
        (SPC). It covers dimensional variables but does not take account of attributes.
        ","objectID":"68624_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>02:2017 Plain bearings -- Quality characteristics -- Statistical
        process control (SPC)","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>02:2017 specifies for plain bearings (except thick-walled half-bearings)
        those quality characteristics in accordance with <em>ISO</em> <em>123</em>01
        which can be used to regulate and control a production process on the basis
        of statistical process control (SPC). It covers dimensional variables but
        does not take account of attributes. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/05/13/51395","uuid":"ec77add9-f625-48bd-8be9-d6a4790642f8","title":"ISO
        12384:2010 Aerospace -- Requirements for digital equipment for measurements
        of aircraft electrical power characteristics","status":"Published","year":2017,"order":11,"text":"ISO
        12384:2010 specifies the requirements for digital measuring methods and digital
        measuring equipment for aircraft electrical power characteristics, including
        accuracy, algorithms and digital measuring equipment. The measuring equipment
        should be applied mainly for the use of laboratory or rig tests. ISO 12384:2010
        can be applied to digital measuring equipment which is involved in the measurement
        of power electrical characteristics of the power supply system, power distributing
        systems and the utilization of equipment in aircrafts. ","objectID":"51395_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>84:2010 Aerospace -- Requirements for digital equipment for measurements
        of aircraft electrical power characteristics","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"<em>ISO</em>
        <em>123</em>84:2010 specifies the requirements for digital measuring methods
        and digital measuring equipment for aircraft electrical power characteristics,
        including accuracy, algorithms and digital measuring equipment. The measuring
        equipment should be applied mainly for the use of laboratory or rig tests.
        <em>ISO</em> <em>123</em>84:2010 can be applied to digital measuring equipment
        which is involved in the measurement of power electrical characteristics of
        the power supply system, power distributing systems and the utilization of
        equipment in aircrafts. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/03/05/30571","uuid":"af63c3d4-5172-4997-8388-e85069c1c9d6","title":"ISO
        12368:2001 Agricultural vehicles -- Mechanical hook-type connections on towing
        vehicles -- Test methods and requirements","status":"Published","year":2017,"order":11,"objectID":"30571_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>68:2001 Agricultural vehicles -- Mechanical hook-type connections
        on towing vehicles -- Test methods and requirements","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/00/16/1680","uuid":"5371c655-c3f0-4b90-ad5f-e01eef36e63a","title":"ISO
        12364:2001 Two-wheeled motorcycles -- Antilock braking systems (ABS) -- Tests
        and measurement methods","status":"Published","year":2017,"order":11,"text":"This
        International Standard specifies tests and measurement methods for solo motorcycles
        (defined in ISO 3833) equipped with one or more antilock, and one or more
        independent, braking systems. It sets out procedures for the following types
        of straight-line braking tests: utilization-of-adhesion test; wheel-lock check
        test; tests with ABS failed; complementary tests that could assist in the
        assessment and development of braking systems. ","objectID":"1680_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>64:2001 Two-wheeled motorcycles -- Antilock braking systems (ABS)
        -- Tests and measurement methods","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]},"text":{"value":"This
        International Standard specifies tests and measurement methods for solo motorcycles
        (defined in <em>ISO</em> 3833) equipped with one or more antilock, and one
        or more independent, braking systems. It sets out procedures for the following
        types of straight-line braking tests: utilization-of-adhesion test; wheel-lock
        check test; tests with ABS failed; complementary tests that could assist in
        the assessment and development of braking systems. ","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["iso"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/06/71/67151","uuid":"dfc43ac1-c86a-48d1-97e6-782b297abeba","title":"ISO
        12312-1:2013/Amd 1:2015 ","status":"Published","year":2015,"order":11,"objectID":"67151_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>123</em>12-1:2013/Amd 1:2015 ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","123"]}}}],"nbHits":118,"page":0,"nbPages":6,"hitsPerPage":20,"processingTimeMS":4,"exhaustiveNbHits":true,"query":"ISO
        123","params":"facetFilters=%5B%22category%3Astandard%22%5D&query=ISO+123"}

'
    http_version: 
  recorded_at: Sun, 21 Oct 2018 19:51:28 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/23281.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=75419EB9EDBFB99F28987CD62D477580; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 21 Oct 2018 19:51:30 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 21 Oct 2018 19:51:30 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/3926.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=839229D560EC3BFC0C2B27934521C0BA; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 21 Oct 2018 19:51:30 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CgoKPCEtLVtpZiBJRSA4XT4KPGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJpZTgiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDldPgo8aHRtbCBsYW5nPSJlbiIgY2xhc3M9ImllOSI+PCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPgo8aHRtbCBsYW5nPSJlbiI+PCEtLTwhW2VuZGlmXS0tPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZW4nCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgCgogICAgPHRpdGxlPklTTyAxMjM6MTk4NSAtIFJ1YmJlciBsYXRleCAtLSBTYW1wbGluZzwvdGl0bGU+CiAgICAKCgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vZmF2aWNvbi9yZWQvYXBwbGUtdG91Y2gtaWNvbi0xNTJ4MTUyLXByZWNvbXBvc2VkLnBuZyI+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2Zhdmljb24vcmVkL2Zhdmljb24uaWNvIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjZWVlIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUltYWdlIiBjb250ZW50PSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgCgogIAo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CnZhciBjb250ZXh0SnNQYXJhbWV0ZXJzPXtjb250ZXh0UGF0aDoiIixsYW5nOiJlbiIsdWlsYW5nOiJlbiIsc2l0ZVV1aWQ6IjQzOTE0NmY4LTY3N2UtNGRkZS1iNmM2LWI2OTJiNzUzNGY1MiIsd2NhZzpmYWxzZSxja2VDZmc6IiJ9OyB2YXIgQ0tFRElUT1JfQkFTRVBBVEg9Ii9tb2R1bGVzL2NrZWRpdG9yL2phdmFzY3JpcHQvIjsgdmFyIHNjYXl0X2N1c3RvbV9wYXJhbXM9bmV3IEFycmF5KCk7IHNjYXl0X2N1c3RvbV9wYXJhbXNbJ3NMYW5nJ109J2VuX1VTJzsKPC9zY3JpcHQ+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzAiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy93b29kLm1pbi5jc3M/MTUzMzMwMjY2Njg4MyIgbWVkaWE9InNjcmVlbixwcmludCxoYW5kaGVsZCIgdHlwZT0idGV4dC9jc3MiLz4KPGxpbmsgaWQ9InN0YXRpY0Fzc2V0Q1NTMSIgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvY3NzL2N1c3RvbS5jc3M/MTUzMzMwMjY2Njg4MyIgbWVkaWE9InNjcmVlbixwcmludCxoYW5kaGVsZCIgdHlwZT0idGV4dC9jc3MiLz4KPGxpbmsgaWQ9InN0YXRpY0Fzc2V0Q1NTMiIgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvbW9kdWxlcy9hc3NldHMvY3NzL2xhbmd1YWdlU3dpdGNoaW5nTGlua3MuY3NzPzE1MzIwMDM1MDU3NjYiIG1lZGlhPSJzY3JlZW4iIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzMiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvLWphaGlhLXNlcnZpY2UtbW9kdWxlL2Nzcy9jYXRhbG9ndWUuY3NzPzE1MzczNDYwNTI1NDkiIG1lZGlhPSJzY3JlZW4iIHR5cGU9InRleHQvY3NzIi8+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDAiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvamF2YXNjcmlwdC93b29kLm1pbi5qcz8xNTMzMzAyNjY2ODgzIj48L3NjcmlwdD4KPHNjcmlwdCBpZD0ic3RhdGljQXNzZXRKYXZhc2NyaXB0MSIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9qYXZhc2NyaXB0L2NhdGFsb2d1ZS5qcz8xNTM3MzQ2MDUyNTQ5Ij48L3NjcmlwdD4KPHNjcmlwdCBpZD0ic3RhdGljQXNzZXRKYXZhc2NyaXB0MiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9qYXZhc2NyaXB0L2N1c3RvbS5qcz8xNTMzMzAyNjY2ODgzIj48L3NjcmlwdD4KCiAgICAgIDwhLS1baWYgbHRlIElFIDldPgogICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvY3NzL2llOS53b29kLmNzcyIgbWVkaWE9InNjcmVlbiIgLz4KICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9sdGUtaWU5Lm1pbi5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgICAgIDwhW2VuZGlmXS0tPgoKICAgICAgPCEtLSBIVE1MNSBTaGltIGFuZCBSZXNwb25kLmpzIElFOCBzdXBwb3J0IG9mIEhUTUw1IGVsZW1lbnRzIGFuZCBtZWRpYSBxdWVyaWVzIC0tPgogICAgICA8IS0tIFdBUk5JTkc6IFJlc3BvbmQuanMgZG9lc24ndCB3b3JrIGlmIHlvdSB2aWV3IHRoZSBwYWdlIHZpYSBmaWxlOi8vIC0tPgogICAgICA8IS0tW2lmIGx0IElFIDldPgogICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9vc3MubWF4Y2RuLmNvbS9saWJzL2h0bWw1c2hpdi8zLjcuMC9odG1sNXNoaXYuanMiPjwvc2NyaXB0PgogICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9vc3MubWF4Y2RuLmNvbS9saWJzL3Jlc3BvbmQuanMvMS40LjIvcmVzcG9uZC5taW4uanMiPjwvc2NyaXB0PgogICAgICA8IVtlbmRpZl0tLT4KCiAgICAKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChkb2N1bWVudCkub24oInN1Ym1pdCIsICIjbmF2TWVudS1zZWFyY2hOYXYiLCBmdW5jdGlvbihlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbCA9ICQodGhpcykuZmluZCgiaW5wdXQuc2VhcmNoLWlucHV0IikudmFsKCk7CiAgICAgIC8vIEdldCByaWQgb2YgIi4iCiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC9eXC4kLywgIiIpOwogICAgICAvLyBHZXQgcmlkIG9mICIuLiIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoL15cLlwuJC8sICIiKTsKICAgICAgLy8gR2V0IHJpZCBvZiBldmVyeSAiJSIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoLyUvZywgIiIpOwogICAgICB2YWwgPSB2YWwudHJpbSgpOwogICAgICBpZiAodmFsICE9PSAnJykgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoIi9jbXMvcmVuZGVyL2xpdmUvZW4vc2l0ZXMvaXNvb3JnL3NlYXJjaC5odG1sP3E9IiArIHZhbCk7CiAgICAgIH0KICAgIH0pOwogIDwvc2NyaXB0PgoKCiAgICA8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICAKICAgIDxtZXRhIG5hbWU9InB1YmRhdGUiIGNvbnRlbnQ9IjIwMDEwNTMxIiAvPgogIAoKPC9oZWFkPgogIDxib2R5IGNsYXNzPSJ0aGVtZS1yZWQiPgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KICAgIDxub3NjcmlwdD48aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tVEZHS1FRQiIgaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KICAgIDwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgoKICAgIDwhLS0gSGVhZGVyIElTTy5PUkcgLS0+CiAgICA8aGVhZGVyIGNsYXNzPSJoZWFkZXIgaGVhZGVyLWlzbyBjb250YWluZXIiIHJvbGU9ImJhbm5lciI+CiAgICAgIDxkaXYgY2xhc3M9InJ1YmJlciI+PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9InRvcGJhciB0b3BiYXItbGlnaHQiPgogICAgICAgIDxkaXYgY2xhc3M9InRvcGJhci1jb250ZW50Ij4KICAgICAgICAgIAoKPHVsIGlkPSJsYW5nLXN3aXRjaGVyIj4KICA8bGkgY2xhc3M9ImRyb3Bkb3duIj4KICAgIDxhIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaHJlZj0iIyI+RW5nbGlzaCA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj48L2E+CiAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICA8bGk+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkLzM5MjYuaHRtbCI+ZnJhbsOnYWlzPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9ydS9zdGFuZGFyZC8zOTI2Lmh0bWwiPtGA0YPRgdGB0LrQuNC5PC9hPjwvbGk+CiAgICA8L3VsPgogIDwvbGk+CjwvdWw+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgICAgPHVsIGNsYXNzPSJ0b3BsaW5rcyI+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBjbGFzcz0ic2hvcHBpbmctY2FydC1saW5rIiBocmVmPSIvd2Vic3RvcmUvc2hvcHBpbmdiYXNrZXQ/bWVtYmVySWQ9SVNPJmd1aWxhbmc9ZW4iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hvcHBpbmctY2FydC1iYWRnZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNob3BwaW5nLWNhcnQiIGlkPSJzaG9wcGluZ0l0ZW1zIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLWNvbnRhaW5lciBoZWFkZXItaW1nIGhlYWRlci1pbWctaXNvIGhlYWRlci1zaG9ydCI+CiAgICAgICAgPG5hdiBjbGFzcz0ibmF2YmFyIiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICAgIDwhLS0gQnJhbmQgYW5kIHRvZ2dsZSBnZXQgZ3JvdXBlZCBmb3IgYmV0dGVyIG1vYmlsZSBkaXNwbGF5IC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWhlYWRlciI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJsb2dvIGlzb2xvZ28iIGhyZWY9Ii9ob21lLmh0bWwiIHRpdGxlPSJJU08iPjwvYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXNvbG9nby1wcmludCI+PGltZyBzcmM9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2lzby1sb2dvLXByaW50LmdpZiIgYWx0PSJJU08gbG9nbyBmb3IgcHJpbnQiLz48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXRpdGxlIGNsZWFyZml4Ij4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUtbWVkaXVtIHRpdGxlLXRoaW4iPkludGVybmF0aW9uYWwgT3JnYW5pemF0aW9uIGZvciBTdGFuZGFyZGl6YXRpb248L3A+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlLXNtYWxsIHRpdGxlLXJlZCB0ZXh0LXJpZ2h0IGhpZGRlbi14cyI+V2hlbiB0aGUgd29ybGQgYWdyZWVzPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPCEtLSBOQVZJR0FUSU9OIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ibmF2LWNvbnRhaW5lciBjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UgbmF2LTNsZXZlbHMiaWQ9Im9mZmNhbnZhcy1tZW51Ij4KCgo8Zm9ybSBpZD0ibmF2TWVudS1zZWFyY2hOYXYiIGNsYXNzPSJuYXZiYXItZm9ybSBuYXZiYXItcmlnaHQiIHJvbGU9InNlYXJjaCI+CiAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgc2VhcmNoLWlucHV0IiBwbGFjZWhvbGRlcj0iU2VhcmNoIj4KICAgIDxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC1idG4iPgogICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgc2VhcmNoLXN1Ym1pdCIgdHlwZT0ic3VibWl0Ij4KICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2giPjwvc3Bhbj4KICAgICAgPC9idXR0b24+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjwvZm9ybT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDEgdmVydGljYWxpbmUgbm9jYXJldCI+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+U3RhbmRhcmRzPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkJlbmVmaXRzPC9hPjxkaXYgY2xhc3M9J2Ryb3Bkb3duLW1lbnUgbmF2LXBhbmVsJyByb2xlPSdtZW51Jz4KICA8ZGl2IGNsYXNzPSdwYW5lbC1pbWFnZSc+CiAgICA8aW1nIHNyYz0nL2ZpbGVzL2xpdmUvc2l0ZXMvaXNvb3JnL2ZpbGVzL19ub2luZGV4L3N0cmVldC1wZWRlc3RyaWFuLWNyb3Nzd2Fsay5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nUGVkZXN0cmlhbnMgY3Jvc3NpbmcgYSBzdHJlZXQgYXQgYSBjcm9zc3dhbGsuJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QmVuZWZpdHM8L2E+PC9oND4KPHA+V2hldGhlciB5b3UgcnVuIGEgYnVzaW5lc3MsIHdvcmsgZm9yIGEgY29tcGFueSBvciBnb3Zlcm5tZW50LCBvciB3YW50IHRvIGtub3cgaG93IHN0YW5kYXJkcyBjb250cmlidXRlIHRvIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyB0aGF0IHlvdSB1c2UsIHlvdSdsbCBmaW5kIGl0IGhlcmUuPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvaXNvLWFuZC1zbWVzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlNNRXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9iZW5lZml0cy1vZi1zdGFuZGFyZHMtdGhlLWlzby1tYXRlcmlhbHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TGVhcm4gbW9yZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2lzby1hbmQtY29uc3VtZXJzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNvbnN1bWVyczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2lzby1hbmQtcG9saWN5LW1ha2Vycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5JU08gYW5kIHBvbGljeSBtYWtlcnM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdGFuZGFyZHMtaW4tYWN0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0YW5kYXJkcyBpbiBhY3Rpb248L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3BvcHVsYXItc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlBvcHVsYXIgc3RhbmRhcmRzPC9hPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciI+PGEgaHJlZj0iL2NvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DZXJ0aWZpY2F0aW9uICYgY29uZm9ybWl0eTwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9taWNyb3Njb3BlLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdTY2llbnRpc3QgcGxhY2luZyBhIHNsaWRlIGJlbmVhdGggYW4gb3B0aWNhbCBtaWNyb3Njb3BlJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q2VydGlmaWNhdGlvbiAmIGNvbmZvcm1pdHk8L2E+PC9oND4KPHA+QSBzZXQgb2YgcHJvY2Vzc2VzIHRoYXQgc2hvdyB5b3VyIHByb2R1Y3QsIHNlcnZpY2Ugb3Igc3lzdGVtIG1lZXRzIHRoZSByZXF1aXJlbWVudHMgb2YgYSBzdGFuZGFyZC48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9jZXJ0aWZpY2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb248L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9jYXNjby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DQVNDTzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3RoZS1pc28tc3VydmV5Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlRoZSBJU08gU3VydmV5PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvcmVzb3VyY2VzLWZvci1jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVzb3VyY2VzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zZGdzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlNER3M8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIj48YSBocmVmPSIvYWJvdXQtdXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWxsIGFib3V0IElTTzwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3doYXQtd2UtZG8uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+V2hhdCB3ZSBkbzwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9idXNpbmVzcy1zZW1pbmFyLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdCYWNrIHZpZXcgb2YgcGVvcGxlIGluIGEgbWVldGluZywgbG9va2luZyBhdCBhIHByZXNlbnRhdGlvbiBvbiBhIHNjcmVlbi4nPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL3doYXQtd2UtZG8uaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+V2hhdCB3ZSBkbzwvYT48L2g0Pgo8cD5GaW5kIG91dCBob3cgd2UgZGV2ZWxvcCBhbmQgcHVibGlzaCBpbnRlcm5hdGlvbmFsIHN0YW5kYXJkcyBieSBicmluZ2luZyB0b2dldGhlciBtb3JlIHRoYW4gMTYwIG1lbWJlcnMgYW5kIG1vcmUgdGhhbiA0NSwwMDAgZXhwZXJ0czwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiICBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5EZXZlbG9waW5nIHN0YW5kYXJkczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3Jlc2VhcmNoLWFuZC1lZHVjYXRpb24uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVzZWFyY2g8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9jYXBhY2l0eS1idWlsZGluZy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DYXBhY2l0eSBidWlsZGluZzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2VkdWNhdGlvbi1hYm91dC1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RWR1Y2F0aW9uIGFib3V0IHN0YW5kYXJkczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2Rpdj48IS0tIGNsb3NlIG9mIHBhbmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvc3RydWN0dXJlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0cnVjdHVyZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL21lbWJlcnMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TWVtYmVyczwvYT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIiPjxhIGhyZWY9Ii9uZXdzX2luZGV4Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk5ld3M8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvQWxsJTIwYWJvdXQlMjBJU08tTmV3c19jYWxlbmRhci1jbG9zZS11cCUyME5vJTIweWVhci5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nTW9udGhzIGFuZCBkYXRlcyBzaG93biBvbiBhIGNhbGVuZGFyIHdoaWxzdCB0dXJuaW5nIHRoZSBwYWdlcyB3aXRoIHNoYWxsb3cgZGVwdGggb2YgZmllbGQnPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL25ld3NfaW5kZXguaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TmV3czwvYT48L2g0Pgo8cD5LZWVwIHVwIHRvIGRhdGUgd2l0aCB0aGUgbGF0ZXN0IGluIHN0YW5kYXJkaXphdGlvbiBvciBicm93c2Ugb3VyIHJpY2ggYXJjaGl2ZXM8L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9uZXdzX2FyY2hpdmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TmV3cyBhcmNoaXZlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvaXNvZm9jdXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+SVNPZm9jdXMgbWFnYXppbmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9ldmVudHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RXZlbnRzIGFuZCBtZWV0aW5nczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL21lZGlhLWtpdC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NZWRpYSBraXQ8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIGhyZWY9Ii9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5UYWtpbmcgcGFydDwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3doby1kZXZlbG9wcy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+V2hvIGRldmVsb3BzIHN0YW5kYXJkczwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvdGVjaG5pY2FsLWNvbW1pdHRlZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+VGVjaG5pY2FsIENvbW1pdHRlZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9vdGhlci1ib2RpZXMtZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+T3RoZXIgYm9kaWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvb3JnYW5pemF0aW9ucy1pbi1jb29wZXJhdGlvbi13aXRoLWlzby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Pcmdhbml6YXRpb25zIGluIGNvb3BlcmF0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZGVsaXZlcmFibGVzLWFsbC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5EZWxpdmVyYWJsZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9nZXQtaW52b2x2ZWQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+R2V0IGludm9sdmVkPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvcmVzb3VyY2VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaW5QYXRoIG9wZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdG9yZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdG9yZTwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0YW5kYXJkcyBjYXRhbG9ndWU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlB1YmxpY2F0aW9ucyBhbmQgcHJvZHVjdHM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJvZmZjYW52YXMtdG9nZ2xlIiBkYXRhLXRvZ2dsZT0ib2ZmY2FudmFzIj4gIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW1lbnUtaGFtYnVyZ2VyIj48L3NwYW4+PC9idXR0b24+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvbmF2PgogICAgICA8L2Rpdj4KICAgIDwvaGVhZGVyPgogICAgCgoKCgo8c3BhbiBjbGFzcz0iaGlkZGVuIiBpZD0iaW5kZXhSZWZlcmVuY2UiIGRhdGEtaW5kZXg9IjM5MjYgLSBJU08gMTIzOjE5ODUgLSBSdWJiZXIgbGF0ZXggLS0gU2FtcGxpbmciPjwvc3Bhbj4KPGRpdiBjbGFzcz0ibWFpbiBjb250YWluZXIiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUHJvZHVjdCI+CiAgPGRpdiBjbGFzcz0icm93IHJvdy10b3Agcm93LWxpZ2h0Ij4KICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgIDxkaXYgY2xhc3M9ImJyZWFkY3J1bWItY29udGFpbmVyIHNtYWxsIj4KICAKICA8b2wgY2xhc3M9ImJyZWFkY3J1bWIiPgogICAgCiAgICAgIDxsaT48YSBocmVmPSIvaG9tZS5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1ob21lIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPjwvYT48L2xpPgogICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0b3JlLmh0bWwiPgogICAgICAgICAgICAgICAgU3RvcmUKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAo8YSBocmVmPSIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiID5TdGFuZGFyZHMgY2F0YWxvZ3VlPC9hPgoKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiPgogICAgICAgICAgICAgICAgQnJvd3NlIGJ5IElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvODMuaHRtbCI+ODM8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2VuL2ljcy84My4wNDAuaHRtbCI+ODMuMDQwPC9hPjwvbGk+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvODMuMDQwLjEwLmh0bWwiPjgzLjA0MC4xMDwvYT48L2xpPgogICAgPGxpPklTTyAxMjM6MTk4NTwvbGk+CiAgPC9vbD4KCjwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJjYXRlZ29yeSI+dzwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJwcm9kdWN0SUQiIGlkPSJjc051bWJlciI+MzkyNjwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJicmFuZCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KICAgICAgICA8ZGl2IGl0ZW1wcm9wPSJsb2dvIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9JbWFnZU9iamVjdCI+CiAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0idXJsIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiLz4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJ3aWR0aCIgY29udGVudD0iMjgzIj4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJoZWlnaHQiIGNvbnRlbnQ9IjI2MSI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPG1ldGEgaXRlbXByb3A9Im5hbWUiIGNvbnRlbnQ9IklTTyAtIEludGVybmF0aW9uYWwgT3JnYW5pemF0aW9uIGZvciBTdGFuZGFyZGl6YXRpb24iPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9ImhlYWRpbmctY29uZGVuc2VkIj4KICAgICAgICA8aDE+CiAgICAgICAgICA8c3Ryb25nIGlkPSJpdGVtUmVmZXJlbmNlIiBpdGVtcHJvcD0ibmFtZSI+SVNPIDEyMzoxOTg1PC9zdHJvbmc+CiAgICAgICAgICAKICAgICAgICA8L2gxPgoKICAgICAgICA8aDIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj5SdWJiZXIgbGF0ZXggLS0gU2FtcGxpbmc8L2gyPgogICAgICAgIAogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgoKICAKICAgIDxkaXYgY2xhc3M9InJvdyByb3ctbWlkZGxlIGJnLWRhbmdlciBhbGVydC1kYW5nZXIgZW1waGFzaXMtZGFuZ2VyIj4KICAgICAgPGRpdiBzdHlsZT0icGFkZGluZzogMCAxNXB4OyI+CiAgICAgICAgPGg2IHJvbGU9ImFsZXJ0IiBjbGFzcz0ibm8tbWFyZ2luIj4KICAgICAgICAgIFRoaXMmbmJzcDtzdGFuZGFyZCZuYnNwO2hhcyBiZWVuIHJldmlzZWQgYnkgPGEgaHJlZj0iL3N0YW5kYXJkLzIzMjgxLmh0bWwiPklTTyAxMjM6MjAwMTwvYT4uCiAgICAgICAgPC9oNj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAKCiAgPGRpdiBjbGFzcz0icm93Ij4KICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KCiAgICAgIDxkaXYgY2xhc3M9IndlbGwiPgogIDxoMz4KICAgIEdlbmVyYWwgaW5mb3JtYXRpb24KICAgIDxzdXA+PGEgaHJlZj0iL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvMzkvMzkyNi5kZXRhaWwucnNzIiBjbGFzcz0ic3MtaWNvbiBzcy1zb2NpYWwtY2lyY2xlIHRleHQtd2FybmluZyB0ZXh0LXNtYWxsIiBkYXRhLXRvZ2dsZT0iaXNvLXRvb2x0aXAiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IlN1YnNjcmliZSZuYnNwO3RvJm5ic3A7dXBkYXRlcyI+JiN4RTMxMDs8L2E+PC9zdXA+CiAgPC9oMz4KICAKCiAgPHVsIGNsYXNzPSJyZWZpbmUiPgogICAgPGxpPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02Ij4KICAgICAgICAgIAoKICAgICAgICAgICAgPHN0cm9uZz5TdGF0dXMmbmJzcDs6Jm5ic3A7Jm5ic3A7PC9zdHJvbmc+PHNwYW4+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tYmFuLWNpcmNsZSIgdGl0bGU9IldpdGhkcmF3biI+PC9zcGFuPldpdGhkcmF3bjwvc3Bhbj4KICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02Ij4KICAgICAgICAgIAogICAgICAgICAgICA8c3Ryb25nPlB1YmxpY2F0aW9uIGRhdGUmbmJzcDs6IDwvc3Ryb25nPjxzcGFuIGl0ZW1wcm9wPSJyZWxlYXNlRGF0ZSI+MTk4NS0wODwvc3Bhbj4KICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvbGk+CiAgICA8bGk+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgICAgIDxzdHJvbmc+RWRpdGlvbiZuYnNwOzo8L3N0cm9uZz4gMgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02Ij4KICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LWxhYmVsIj5UZWNobmljYWwgQ29tbWl0dGVlPC9kaXY+IDoKICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LW5hbWUgZW50cnktYmxvY2siPgogICAgICAgICAgICA8YSBocmVmPSIvY29tbWl0dGVlLzQ4NzE2Lmh0bWwiPklTTy9UQyA0NS9TQyAzPC9hPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS10aXRsZSI+UmF3IG1hdGVyaWFscyAoaW5jbHVkaW5nIGxhdGV4KSBmb3IgdXNlIGluIHRoZSBydWJiZXIgaW5kdXN0cnk8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgIAogICAgPGxpPgogICAgICA8ZGwgY2xhc3M9ImRsLWlubGluZSBuby1ib3R0b20tbWFyZ2luIj4KICAgICAgICA8ZHQgY2xhc3M9ImVudHJ5LWxhYmVsIGVudHJ5LWJsb2NrIj48c3Ryb25nPklDUyA6IDwvc3Ryb25nPjwvZHQ+CiAgICAgICAgCiAgICAgICAgICA8ZGQ+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LW5hbWUgZW50cnktYmxvY2siPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9pY3MvODMuMDQwLjEwLmh0bWwiPgogICAgICAgICAgICAgICAgICA4My4wNDAuMTAKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS10aXRsZSI+TGF0ZXggYW5kIHJhdyBydWJiZXI8L2Rpdj4KICAgICAgICAgIDwvZGQ+CiAgICAgICAgCiAgICAgIDwvZGw+CiAgICA8L2xpPgogIDwvdWw+CjwvZGl2PgoKICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC1tZC1vZmZzZXQtMSI+CiAgICAgIAoKICAgIDwvZGl2PgogIDwvZGl2PgoKICAKPGRpdiBjbGFzcz0icm93IHJvdy1taWRkbGUgcm93LXRvcGxpbmUiPgogIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICA8aDM+TGlmZSBjeWNsZTwvaDM+CiAgICA8cD4KICAgICAgQSBzdGFuZGFyZCBpcyByZXZpZXdlZCBldmVyeSA1IHllYXJzCiAgICA8L3A+CiAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCB0aGVtZS1yZWQiPgogICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IHN0YWdlcyI+CiAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MDA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHJlbGltaW5hcnk8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4xMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Qcm9wb3NhbDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjIwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByZXBhcmF0b3J5PC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MzA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+Q29tbWl0dGVlPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFnZS1jb2Rlcy5odG1sIzMwLjAwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj4zMC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTgyLTA1LTAxPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBDb21taXR0ZWUgZHJhZnQgKENEKSByZWdpc3RlcmVkCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjMzAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5ODMtMDEtMDE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENEIGFwcHJvdmVkIGZvciByZWdpc3RyYXRpb24gYXMgRElTCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+NDA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+RW5xdWlyeTwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhZ2UtY29kZXMuaHRtbCM0MC4wMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NDAuMDA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk4My0xMC0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgRElTIHJlZ2lzdGVyZWQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhZ2UtY29kZXMuaHRtbCM0MC4yMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NDAuMjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk4NC0wMy0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgRElTIGJhbGxvdCBpbml0aWF0ZWQ6IDEyIHdlZWtzCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjNDAuNjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjQwLjYwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5ODQtMDktMDE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENsb3NlIG9mIHZvdGluZwogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjUwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkFwcHJvdmFsPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFnZS1jb2Rlcy5odG1sIzUwLjAwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj41MC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTg1LTA0LTI0PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBGaW5hbCB0ZXh0IHJlY2VpdmVkIG9yIEZESVMgcmVnaXN0ZXJlZCBmb3IgZm9ybWFsIGFwcHJvdmFsCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjNTAuMjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjUwLjIwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5ODUtMDYtMDQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIFByb29mIHNlbnQgdG8gc2VjcmV0YXJpYXQgb3IgRkRJUyBiYWxsb3QgaW5pdGlhdGVkOiA4IHdlZWtzCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjNTAuNjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjUwLjYwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5ODUtMDYtMDQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENsb3NlIG9mIHZvdGluZy4gUHJvb2YgcmV0dXJuZWQgYnkgc2VjcmV0YXJpYXQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz42MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QdWJsaWNhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhZ2UtY29kZXMuaHRtbCM2MC42MCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NjAuNjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk4NS0wOC0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBwdWJsaXNoZWQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5SZXZpZXc8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjOTAuOTMiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjkwLjkzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5OTEtMDEtMDE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEludGVybmF0aW9uYWwgU3RhbmRhcmQgY29uZmlybWVkCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjOTAuOTIiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjkwLjkyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5OTMtMDgtMTU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEludGVybmF0aW9uYWwgU3RhbmRhcmQgdG8gYmUgcmV2aXNlZAogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45NS45OTwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5XaXRoZHJhd2FsPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFjdGl2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjOTUuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjk1Ljk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDEtMDUtMzE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIFdpdGhkcmF3YWwgb2YgSW50ZXJuYXRpb25hbCBTdGFuZGFyZAogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICA8L3VsPgogICAgPC9kaXY+CiAgICA8YnIvPgogICAgPGJyLz4KICAgIDxoND5SZXZpc2lvbnMmbmJzcDsvJm5ic3A7Q29ycmlnZW5kYTwvaDQ+CiAgICA8dWwgY2xhc3M9InN0ZXBzIj4KICAgICAgCiAgICAgICAgICAgIDxsaSBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIj4KICAgICAgICAgIAogICAgICAgIDxzdHJvbmc+UHJldmlvdXNseTwvc3Ryb25nPjxici8+CiAgICAgICAgCiAgICAgICAgICA8YSBocmVmPSIvc3RhbmRhcmQvMzkyNS5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iV2l0aGRyYXduIj48L3NwYW4+SVNPIDEyMzoxOTc0PC9hPjxiciAvPgogICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgIDxsaSBjbGFzcz0ic3RlcCBhbGVydCBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICA8c3Ryb25nPk5vdyB3aXRoZHJhd248L3N0cm9uZz48YnIvPgogICAgICAgIAogICAgICAgIDxhIGhyZWY9Ii9zdGFuZGFyZC8zOTI2Lmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJhbi1jaXJjbGUiIHRpdGxlPSJXaXRoZHJhd24iPjwvc3Bhbj5JU08gMTIzOjE5ODU8L2E+CiAgICAgIDwvbGk+CiAgICAgIAogICAgICAgICAgICA8bGkgY2xhc3M9InN0ZXAgYWxlcnQgYWxlcnQtd2FybmluZyI+CiAgICAgICAgICAgIDxzdHJvbmc+UmV2aXNlZCBieTwvc3Ryb25nPjxici8+CiAgICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Ii9zdGFuZGFyZC8yMzI4MS5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1vay1jaXJjbGUiIHRpdGxlPSJQdWJsaXNoZWQiPjwvc3Bhbj5JU08gMTIzOjIwMDE8L2E+PGJyIC8+CiAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgCiAgICA8L3VsPgogIDwvZGl2Pgo8L2Rpdj48ZGl2IGNsYXNzPSJyb3cgcm93LWJvdHRvbSByb3ctbGlnaHQiPgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxoND5Hb3QgYSBxdWVzdGlvbj88L2g0PgoKPHA+Q2hlY2sgb3V0IG91ciA8YSBocmVmPSIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIiB0aXRsZT0iRnJlcXVlbnRseSBBc2tlZCBRdWVzdGlvbnMgKEZBUXMpIj5GQVFzPC9hPjwvcD4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8ZGl2IGNsYXNzPSJ2Y2FyZCBjb250YWN0IGNsZWFyZml4IiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxkaXYgY2xhc3M9ImNvbnRlbnQtYm94IG5vLWltYWdlIj4KPGRpdiBjbGFzcz0iZm4gbiI+PHNwYW4gY2xhc3M9ImdpdmVuLW5hbWUiIGl0ZW1wcm9wPSJnaXZlbk5hbWUiPkN1c3RvbWVyIGNhcmU8L3NwYW4+PC9kaXY+Cgo8ZGl2IGNsYXNzPSJ0ZWwiIGl0ZW1wcm9wPSJ0ZWxlcGhvbmUiPis0MSAyMiA3NDkgMDggODg8L2Rpdj4KCjxkaXYgY2xhc3M9ImVtYWlsIiBpdGVtcHJvcD0iZW1haWwiPjxhIGhyZWY9Im1haWx0bzpjdXN0b21lcnNlcnZpY2VAaXNvLm9yZyI+Y3VzdG9tZXJzZXJ2aWNlQGlzby5vcmc8L2E+PC9kaXY+Cgo8aHIgLz4KPGRpdiBjbGFzcz0ibm90ZSI+CjxwIGNsYXNzPSJzbWFsbCI+T3BlbmluZyBob3Vyczo8YnIgLz4KTW9uZGF5IHRvIEZyaWRheSAtIDA5OjAwLTEyOjAwLCAxNDowMC0xNzowMCAoVVRDKzEpPC9wPgo8L2Rpdj4KPC9kaXY+CjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxkaXYgY2xhc3M9IndlbGwgZ2x5cGhpY29uLWVudmVsb3BlIj4KICA8aDQgY2xhc3M9InRleHQtY2VudGVyIj48c3BhbiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+S2VlcCB1cCB0byBkYXRlIHdpdGggSVNPPC9zcGFuPjwvaDQ+Cgo8cCBjbGFzcz0idGV4dC1jZW50ZXIiPlNpZ24gdXAgdG8gb3VyIG5ld3NsZXR0ZXIgZm9yIHRoZSBsYXRlc3QgbmV3cywgdmlld3MgYW5kIHByb2R1Y3QgaW5mb3JtYXRpb248L3A+PHAgY2xhc3M9InRleHQtY2VudGVyIj48YSBocmVmPSJodHRwczovL2NvbmZpcm1zdWJzY3JpcHRpb24uY29tL2gvZC8zNDEyREE3OTkzQUMzQjdDIiBjbGFzcz0iZmFuY3lib3ggZmFuY3lib3guaWZyYW1lIGJ0biBidG4tZGVmYXVsdCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tZW52ZWxvcGUiPjwvc3Bhbj4mbmJzcDtTdWJzY3JpYmU8L2E+PC9wPjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KPC9kaXY+CiAgPC9kaXY+CjwvZGl2PgoKPC9kaXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgPGRpdiBjbGFzcz0ibWFpbiBjb250YWluZXIgYnJlYWRjcnVtYi1jb250YWluZXIgdGhlbWUtcmVkIj4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCBoaWRkZW4teHhzIj4KICAgICAgICAgIDwhLS0gQlJFQURDUlVNQiAtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9ImJyZWFkY3J1bWItY29udGFpbmVyIHNtYWxsIj4KICAKICA8b2wgY2xhc3M9ImJyZWFkY3J1bWIiPgogICAgCiAgICAgIDxsaT48YSBocmVmPSIvaG9tZS5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1ob21lIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPjwvYT48L2xpPgogICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0b3JlLmh0bWwiPgogICAgICAgICAgICAgICAgU3RvcmUKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAo8YSBocmVmPSIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiID5TdGFuZGFyZHMgY2F0YWxvZ3VlPC9hPgoKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiPgogICAgICAgICAgICAgICAgQnJvd3NlIGJ5IElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvODMuaHRtbCI+ODM8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2VuL2ljcy84My4wNDAuaHRtbCI+ODMuMDQwPC9hPjwvbGk+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvODMuMDQwLjEwLmh0bWwiPjgzLjA0MC4xMDwvYT48L2xpPgogICAgPGxpPklTTyAxMjM6MTk4NTwvbGk+CiAgPC9vbD4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNCBoaWRkZW4tcHJpbnQiPgogICAgICAgICAgPHAgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICA8YSByb2xlPSJidXR0b24iIGNsYXNzPSJhY2NvcmRpb24tdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBocmVmPSIjY29sbGFwc2VTaXRlbWFwIiB0YXJnZXQ9Il9zZWxmIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIKICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz0iY29sbGFwc2VTaXRlbWFwIj5TaXRlbWFwPC9hPgogICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sbGFwc2UgYm9yZGVyLXRvcCIgaWQ9ImNvbGxhcHNlU2l0ZW1hcCI+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgIDwhLS0gU0lURU1BUCAtLT4KICAgICAgICAgIDxuYXYgY2xhc3M9InNpdGVtYXAtZm9vdGVyIGNsZWFyZml4IHNtYWxsIj48dWwgY2xhc3M9Im5hdi1sZXZlbDEgbGlzdC1pbmxpbmUtNCBjbGVhcmZpeCI+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdGFuZGFyZHMuaHRtbCI+U3RhbmRhcmRzPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLmh0bWwiPkJlbmVmaXRzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvcG9wdWxhci1zdGFuZGFyZHMuaHRtbCI+UG9wdWxhciBzdGFuZGFyZHM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCI+Q2VydGlmaWNhdGlvbiAmIGNvbmZvcm1pdHk8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zZGdzLmh0bWwiPlNER3M8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIj48YSBocmVmPSIvYWJvdXQtdXMuaHRtbCI+QWxsIGFib3V0IElTTzwvYT48dWwgY2xhc3M9Im5hdi1sZXZlbDIgbGlzdC11bnN0eWxlZCI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3doYXQtd2UtZG8uaHRtbCI+V2hhdCB3ZSBkbzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3N0cnVjdHVyZS5odG1sIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9tZW1iZXJzLmh0bWwiPk1lbWJlcnM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9uZXdzX2luZGV4Lmh0bWwiPk5ld3M8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIj48YSBocmVmPSIvZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCI+VGFraW5nIHBhcnQ8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii93aG8tZGV2ZWxvcHMtc3RhbmRhcmRzLmh0bWwiPldobyBkZXZlbG9wcyBzdGFuZGFyZHM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9kZWxpdmVyYWJsZXMtYWxsLmh0bWwiPkRlbGl2ZXJhYmxlczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2dldC1pbnZvbHZlZC5odG1sIj5HZXQgaW52b2x2ZWQ8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9yZXNvdXJjZXMuaHRtbCI+UmVzb3VyY2VzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciBpblBhdGggbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdG9yZS5odG1sIj5TdG9yZTwvYT48dWwgY2xhc3M9Im5hdi1sZXZlbDIgbGlzdC11bnN0eWxlZCI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGluUGF0aCBhY3RpdmUgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiID5TdGFuZGFyZHMgY2F0YWxvZ3VlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvcHVibGljYXRpb24tbGlzdC5odG1sIj5QdWJsaWNhdGlvbnMgYW5kIHByb2R1Y3RzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbmF2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxmb290ZXIgcm9sZT0iY29udGVudGluZm8iIGNsYXNzPSJmb290ZXItaXNvIGNvbnRhaW5lciI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQiPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1saW5rcyBjZW50ZXItYmxvY2siPgogICAgICAgICAgPCEtLSBGT09URVIgTElOS1MgLS0+CiAgICAgICAgICA8bmF2ID48dWwgY2xhc3M9Imxpc3QtaW5saW5lIGNsZWFyZml4IHZlcnRpY2FsaW5lIG5hdi1sZXZlbDEiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9pc28tbmFtZS1hbmQtbG9nby5odG1sIj5JU08gbmFtZSBhbmQgbG9nbzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3ByaXZhY3ktYW5kLWNvcHlyaWdodC5odG1sIj5Qcml2YWN5IGFuZCBjb3B5cmlnaHQ8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9zaXRlbWFwLmh0bWwiPlNpdGVtYXA8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii93b3JraW5nLXdpdGgtaXNvLmh0bWwiID5Kb2JzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIj5GQVFzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvY29udGFjdC1pc28uaHRtbCI+Q29udGFjdCBJU088L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1zb2NpYWwgc3MtaWNvbiBjbGVhcmZpeCI+CiAgICAgICAgICA8dWwgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgogICAgICAgICAgICA8bGluayBpdGVtcHJvcD0idXJsIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnIj4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmFjZWJvb2siPu+YkDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iVHdpdHRlciI+75iRPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibGFzdGNvbCI+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tLytpc28iIHRpdGxlPSJHb29nbGUrIj7vmJM8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS91c2VyL1BsYW5ldElTTyIgdGl0bGU9IllvdVR1YmUiPu+YsDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55L2lzby1pbnRlcm5hdGlvbmFsLW9yZ2FuaXphdGlvbi1mb3Itc3RhbmRhcmRpemF0aW9uIiB0aXRsZT0iTGlua2VkaW4iPu+YkjwvYT48L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Imxhc3Rjb2wiPjxhIGl0ZW1wcm9wPSJzYW1lQXMiICB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmxpY2tyLmNvbS9waG90b3MvaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmxpY2tyIj7vmYA8L2E+PC9saT4KICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPHAgY2xhc3M9InRleHQtc21hbGwiPldlIGFyZSBjb21taXR0ZWQgdG8gZW5zdXJpbmcgdGhhdCBvdXIgd2Vic2l0ZSBpcyBhY2Nlc3NpYmxlIHRvIGV2ZXJ5b25lLiBJZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb25zIG9yIHN1Z2dlc3Rpb25zIHJlZ2FyZGluZyB0aGUgYWNjZXNzaWJpbGl0eSBvZiB0aGlzIHNpdGUsIHBsZWFzZSA8YSBocmVmPSJtYWlsdG86d2VibWFzdGVyQGlzby5vcmc/c3ViamVjdD1BY2Nlc3NpYmlsaXR5IiBzdHlsZT0id2hpdGUtc3BhY2U6IG5vd3JhcCI+Y29udGFjdCB1czwvYT4uPC9wPgogICAgICAgIDxzbWFsbD48YSBocmVmPSIjY29weXJpZ2h0IiB0YXJnZXQ9Il9zZWxmIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWNvbnRyb2xzPSJjb2xsYXBzZUNvcHlyaWdodCI+wqkgQWxsIFJpZ2h0cyBSZXNlcnZlZDwvYT4gPHNwYW4gaWQ9ImNvcHlyaWdodCIgY2xhc3M9ImNvbGxhcHNlIj5BbGwgSVNPIHB1YmxpY2F0aW9ucyBhbmQgbWF0ZXJpYWxzIGFyZSBwcm90ZWN0ZWQgYnkgY29weXJpZ2h0IGFuZCBhcmUgc3ViamVjdCB0byB0aGUgdXNlcuKAmXMgYWNjZXB0YW5jZSBvZiBJU0/igJlzIGNvbmRpdGlvbnMgb2YgY29weXJpZ2h0LiBBbnkgdXNlLCBpbmNsdWRpbmcgcmVwcm9kdWN0aW9uIHJlcXVpcmVzIG91ciB3cml0dGVuIHBlcm1pc3Npb24uIEFsbCBjb3B5cmlnaHQgcmVxdWVzdHMgc2hvdWxkIGJlIGFkZHJlc3NlZCB0byA8YSBocmVmPSJtYWlsdG86Y29weXJpZ2h0QGlzby5vcmciPmNvcHlyaWdodEBpc28ub3JnPC9hPi48L3NwYW4+PC9zbWFsbD4KICAgICAgPC9kaXY+CiAgICA8L2Zvb3Rlcj4KCiAgICAKCgogIDwvYm9keT4KPC9odG1sPg==
    http_version: 
  recorded_at: Sun, 21 Oct 2018 19:51:30 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/3925.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=69886793957EE6A96BD0B508E58C08BB; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 21 Oct 2018 19:51:30 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 21 Oct 2018 19:51:31 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/3925.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=64329686BFCB12956D87DF7CCFAB5645; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 21 Oct 2018 19:51:31 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 21 Oct 2018 19:51:32 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/23281.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=58BF017A65BA7602DCE1A38695068218; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 21 Oct 2018 19:51:32 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 21 Oct 2018 19:51:32 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/3926.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=4F3B332980646AE8A3060F8DCC13782E; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 21 Oct 2018 19:51:31 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 21 Oct 2018 19:51:32 GMT
recorded_with: VCR 4.0.0
